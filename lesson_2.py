"""
Lesson 2
06.12.2023

Знакомство с Python
Комментарии в коде
Переменные
Правила именования переменных
Регистрозависимость
В Пайтон - все - объекты!
Смотрим на то что две переменных могут указывать на один объект
Синтаксические и логические ошибки
Основные (простые) типы данных
Строки. 
Управляющие последовательности
Экранирование
Многострочные строки
Работа со строками
Input - получение данных
Складываение строк
Умножение строк
Форматированные строки


Создание виртуального окружения
python -m venv venv

Активация 
source venv/bin/activate

Деактивация
deactivate

https://www.deepl.com/ru/translator
ctrl + C + C - запускает 
"""

# Правила нейминга переменных

"""
lowerCamelCase - используется в JS
snake_case - используется в Python для переменных, функций
UpperCamelCase - используется в Python для классов

Что должно быть в названии переменной?
1. Существительное или существительное + прилагательное
2. БЕЗ пробелов
3. БЕЗ спецсимволов
4. БЕЗ цифр в НАЧАЛЕ

Константы. Обычная переменная, записана капсоком
Соглашение на уровне разработчиков, что это что то важное

Часто распологаются вверху файла
LOGIN = 'admin'

Регистрозавимость!!!!

user, User, USER - разные переменные
"""

# Комментарий в коде
lesson = 2  # Комментарий после кода
lesson_2 = 2
lesson = 3
# ID и адрес в ОЗУ для lesson

# Логическая ошибка
a = 1
b = 0

print(id(lesson))
# print(a / b) # Работа дойдет до этой строки. Это логическая ошибка ZeroDivisionError
print(id(lesson_2))

# Основные типы данных в Python
# int - integer - целое число
# float - дробное число
# str - string - строка 
# bool - boolean - логический тип данных
# NoneType - None - пустой тип данных
# list - список
# tuple - кортеж
# set - множество
# dict - словарь

# Строки. Упорядоченная неизменяемая итерируемая последовательность символов
mesage = "Hello world!"
message2 = 'Hello world!'
message3 = 'Торт "Наполеон"!'
message4 = "Торт \"Наполеон\"!"
print(message4)


# Многострочные строки
message5 = """I love you're cake "Napoleon"!"""
"""
1. Очень часто это документация. Иногда, комментарии в коде
2. Большие объемы текста с сохранением форматирования
"""
message6 = '''
# Как вывести на экран строку Hello world?
    print("Hello world!")
'''

print(message6)
message7 = """Hello
world!"""

# Управляющие последовательности и символ изоляции
# \n - перенос строки
# \t - табуляция
#\ - экранирование

message8 = "Hello\n\tworld!"

message9 = "Привет! Меня зовут Владимир.\n\n\tЯ учусь в онлайн\nакадемии \"Top\"!"
print(message7)
print(message8)
print(message9)

"""
Симполы управляющие последовательностью вывода

\n - новая строка
\t - табуляция
\ - обратная косая черта
' - одинарная кавычка
" - двойная кавычка
\r - возврат каретки
\b - backspace (удаление предыдущего символа)
\f - перевод страницы
 - восьмеричное значение
 - шестнадцатеричное значение
"""
print("Старый текст\rНовый") # Новый текст
print("Привет, мир!\b.") # Привет мир.

# Оставим это до изучения кодирования текста
print("\101\102\103")  # Восьмеричные значения для 'ABC'
print("\x41\x42\x43") # Шестнадцатеричные значения для 'ABC'


# Input - получение данных от пользователя, а так же блокирование завершения программы
name = input("Введите ваше имя: ") # Возращает строку
mesage9 = "Привет, " + name + "!"
message10 = f"{name}, привет!"
print(message10)

name = "Иван"
age = 30
print("Привет, {}! Тебе {} лет.".format(name, age))

print("Привет, {name}! Тебе {age} лет.".format(name="Богдан", age=25))

name = "Мария"
age = 28
print("Привет, %s! Тебе %d лет." % (name, age)) # s - строка, %d - целое число


# Работа с непредсказумыми строками!)
url = 'https:\www.go\\togle.com\\new'
# \ - обратный слеш используется в путях винды, и это может быть опасно!
# Для того, чтобы этого избежать, используется r в начале строки
# Это называется сырыми строками или raw string
path2 = r'\video'
path = rf"D:\novavi\{path2}"
print(url)
print(path)

user_path = input("Введите путь к файлу: ")
print(user_path)