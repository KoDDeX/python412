"""
Python.
Lesson 3
print
    аргументы назначенные по умолчанию sep и end
input
    всегда отдает строку, что может быть важно на мат. операциях
type
    функция которая возвращает тип данных
int - integer - целое число
float - дробное число
str - string - строка 
    В т.ч. как функции для преобразования данных
Математические операции в Python
import - ключевое слово которое буквально подключает код из другого файла в наш

файлы = модули
папки = пакеты (с файлом __init__.py)
round - его не надо импортировать и он округляет по правилам математики
Math - ceil floor
Random
    random - получить float от 0 до 1
    randint - получить рандомное целое число (от до диапазон)
    choice - вернет рандомное значение из коллекции
    shuffle - перемешать коллекцию (НО не строку!!!!)
    sample - вернет рандомную часть коллекции, в кол-ве равном переданному аргументу
"""
import math
import random



# print - вывод в терминал
# sep - разделитель по умолчанию пробел (разделяет то, что мы передали через запятую)
# end - то, чем кончается строка по умолчанию - перенос строки
# print('Сообщение_1', 2, "Сообщение_3", sep=' || ', end=' ++ ')
# print('Сообщение_1', 2, "Сообщение_3", sep=' || ')

# input - аналог prompt из JS (ввод данных)
# input - ВСЕГДА возврает строку
# input - блокирует поток выполнения программы, до тех пор, пока пользователь не введет данные и не нажмет Enter
# name = input("Введите ваше имя: ")
# print(f'Привет, {name}!')

# input('Нажмите Enter для выхода')

# int - integer - целое число
# float - дробное число
# str - string - строка 

# type - возвращает тип данных
# print(type('Строка'))

# Отладочная строка
# print(f'{1+1}') # 2
# print(f'1 + 1 = {1+1}') # 1 + 1 = 2
# print(f'{1 + 1 = }') # 1 + 1 = 2


# print(f'{type("Строка") = }')
# print(f'type("Строка") = {type("Строка")}')
# type("Строка") = <class 'str'>

a = 3
b = 2

# Сделайте тут отладочную строку a + b
# print(f'{a = }')
# print(f'{b = }')
# print(f'{a + b = }')

# Математические операции в Python
# + сложение
# - вычитание
# * умножение
# / деление
# // деление нацело
# % остаток от деления
# ** возведение в степень
# () - приоритет операций

# print(f'{2 + 2 * 2 = }')
# print(f'{(2 + 2) * 2 = }')

# Определение четности/нечетности числа: Мы можем использовать остаток от деления на 2, чтобы определить, является ли число четным или нечетным. Если остаток равен 0, число четное, иначе - нечетное.

# int - integer - целое число
# float - дробное число
# str - string - строка 


# user_number = input('Введите число: ')
# int - встроенная функция преобразования в целое число
# user_number = int(user_number)

# is_even = user_number % 2 == 0
# print(f'Четность числа {user_number}: {is_even}')

# Яблоки и дети!
# Есть 10 яблок и 4 ребенка. 
# Сколько яблок достанется каждому ребенку?

# apples = 10
# children = 4

# print(f'Яблок на каждого: {apples // children = }')
# print(f'{apples / children = }')
# print(f'Останется, после справедливой дележки: {apples % children = }')

# Разделение группы людей на команды: Представим, что у нас есть группа людей, и мы хотим разделить их на команды с определенным количеством человек в каждой команде. Мы можем использовать целочисленное деление, чтобы определить количество полных команд, и остаток от деления, чтобы узнать, сколько человек останется без команды.

# total_people = 50
# people_per_team = 6

# full_teams = total_people // people_per_team
# remaining_people = total_people % people_per_team
# print(f"Из {total_people} человек можно сформировать {full_teams} полных команд, и {remaining_people} человек останутся без команды")
# Output: Из 50 человек можно сформировать 8 полных команд, и 2 человек останутся без команды


# Расчет стоимости поездки на такси: Допустим, такси берет фиксированную плату за первые 3 километра, а затем дополнительную плату за каждый последующий километр. Мы можем использовать целочисленное деление и остаток от деления, чтобы рассчитать стоимость поездки.

# distance = 2  # расстояние в километрах
# base_fare = 10  # фиксированная плата за первые 3 км
# additional_fare_per_km = 2  # дополнительная плата за каждый последующий км

# print(f'{1.13 // 1 = }')

# По хорошему нам нужно тут ветвление.
# ЕСЛИ расстояние меньше или равно 3 км, то стоимость = базовая плата
# ИНАЧЕ стоимость = базовая плата + (расстояние - 3) * дополнительная плата за км
# TODO добавить в задачник :)

# total_fare = base_fare + (distance - 3) // 1 * additional_fare_per_km
# print(f"Стоимость поездки на {distance} км составит {total_fare} рублей")

# MATH - математическая библиотека
# round - округление
# floor - округление в меньшую сторону
# ceil - округление в большую сторону

a = 1.23934243463456 # ТОЧКА как разделитель
a_int = int(a) # округляет в меньшую сторону
a_str = str(a)

print(f'{a = }')
print(f'{a_int = }')
print(f'{a_str = }')

print(f'{round(a, 2) = }')

b = 1148
print(f'{round(b, -2) = }')

# Примеры использования модуля math
# ceil 

c = 2.1
print(f'{math.ceil(c) = }')

# Деление всегда отдает float (дробное число) даже если делится нацело

# random - вернет случайное число от 0 до 1
print(random.random())

# randint - вернет случайное число от X до Y (включая X и Y)
x = 0
y = 10
print(random.randint(x, y))

message = 'Томный вечер пятницы...'
# len - вернет длину строки
print(f'{len(message) = }')

# Генерируем случайное число от 0 до длина строки - 1
random_index = random.randint(0, len(message) - 1)

# Обращение по индексу через строка[индекс]
# random_letter = message[25] # IndexError: string index out of range
# random_letter = message[random_index]
# print(f'{random_letter = }')

# message_lst = list(message)
# random.shuffle(message_lst)


# print(f'{''.join(message_lst) = }')

# Choice - выбирает случайный элемент из списка
print(random.choice(message))

numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(random.sample(numbers, 3))  # Output: случайная выборка из 3 элементов, например, [4, 7, 2]


# Список - упорядоченная, изменяема итерируема коллецкция элементов разных типов данных
# 

# Практика! Попросите у пользователя ввести список фильмов через запятую.
# используйте на нем .split(",")
# Вы получите список строк.
# Выведите рандомный фиьм через принт исользуя random.choice

# movies = input('Ввведите список фильмов через  запятую: ')
# movies_lst = movies.split(",")
# radnom_film = random.choice(movies_lst)
# print(f'{radnom_film = }')
# Имитация подбрасывания монетки
data = ['орел', 'решка']
print(random.choice(data))
